// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user_service.proto

package user_service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Nothing struct {
	Dummy                bool     `protobuf:"varint,1,opt,name=dummy,proto3" json:"dummy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Nothing) Reset()         { *m = Nothing{} }
func (m *Nothing) String() string { return proto.CompactTextString(m) }
func (*Nothing) ProtoMessage()    {}
func (*Nothing) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{0}
}

func (m *Nothing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Nothing.Unmarshal(m, b)
}
func (m *Nothing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Nothing.Marshal(b, m, deterministic)
}
func (m *Nothing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Nothing.Merge(m, src)
}
func (m *Nothing) XXX_Size() int {
	return xxx_messageInfo_Nothing.Size(m)
}
func (m *Nothing) XXX_DiscardUnknown() {
	xxx_messageInfo_Nothing.DiscardUnknown(m)
}

var xxx_messageInfo_Nothing proto.InternalMessageInfo

func (m *Nothing) GetDummy() bool {
	if m != nil {
		return m.Dummy
	}
	return false
}

type Username struct {
	Username             string   `protobuf:"bytes,1,opt,name=Username,json=username,proto3" json:"Username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Username) Reset()         { *m = Username{} }
func (m *Username) String() string { return proto.CompactTextString(m) }
func (*Username) ProtoMessage()    {}
func (*Username) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{1}
}

func (m *Username) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Username.Unmarshal(m, b)
}
func (m *Username) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Username.Marshal(b, m, deterministic)
}
func (m *Username) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Username.Merge(m, src)
}
func (m *Username) XXX_Size() int {
	return xxx_messageInfo_Username.Size(m)
}
func (m *Username) XXX_DiscardUnknown() {
	xxx_messageInfo_Username.DiscardUnknown(m)
}

var xxx_messageInfo_Username proto.InternalMessageInfo

func (m *Username) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type AnotherUser struct {
	ID                   uint64   `protobuf:"varint,1,opt,name=ID,json=iD,proto3" json:"ID,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=Username,json=username,proto3" json:"Username,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=Name,json=name,proto3" json:"Name,omitempty"`
	Surname              string   `protobuf:"bytes,4,opt,name=Surname,json=surname,proto3" json:"Surname,omitempty"`
	Password             string   `protobuf:"bytes,5,opt,name=Password,json=password,proto3" json:"Password,omitempty"`
	Email                string   `protobuf:"bytes,6,opt,name=Email,json=email,proto3" json:"Email,omitempty"`
	Age                  uint64   `protobuf:"varint,7,opt,name=Age,json=age,proto3" json:"Age,omitempty"`
	Status               string   `protobuf:"bytes,8,opt,name=Status,json=status,proto3" json:"Status,omitempty"`
	AvatarDir            string   `protobuf:"bytes,9,opt,name=AvatarDir,json=avatarDir,proto3" json:"AvatarDir,omitempty"`
	IsActive             bool     `protobuf:"varint,10,opt,name=IsActive,json=isActive,proto3" json:"IsActive,omitempty"`
	IsFollowee           bool     `protobuf:"varint,11,opt,name=IsFollowee,json=isFollowee,proto3" json:"IsFollowee,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnotherUser) Reset()         { *m = AnotherUser{} }
func (m *AnotherUser) String() string { return proto.CompactTextString(m) }
func (*AnotherUser) ProtoMessage()    {}
func (*AnotherUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{2}
}

func (m *AnotherUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnotherUser.Unmarshal(m, b)
}
func (m *AnotherUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnotherUser.Marshal(b, m, deterministic)
}
func (m *AnotherUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnotherUser.Merge(m, src)
}
func (m *AnotherUser) XXX_Size() int {
	return xxx_messageInfo_AnotherUser.Size(m)
}
func (m *AnotherUser) XXX_DiscardUnknown() {
	xxx_messageInfo_AnotherUser.DiscardUnknown(m)
}

var xxx_messageInfo_AnotherUser proto.InternalMessageInfo

func (m *AnotherUser) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *AnotherUser) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *AnotherUser) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AnotherUser) GetSurname() string {
	if m != nil {
		return m.Surname
	}
	return ""
}

func (m *AnotherUser) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *AnotherUser) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *AnotherUser) GetAge() uint64 {
	if m != nil {
		return m.Age
	}
	return 0
}

func (m *AnotherUser) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *AnotherUser) GetAvatarDir() string {
	if m != nil {
		return m.AvatarDir
	}
	return ""
}

func (m *AnotherUser) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *AnotherUser) GetIsFollowee() bool {
	if m != nil {
		return m.IsFollowee
	}
	return false
}

type Users struct {
	Users                []*AnotherUser `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Users) Reset()         { *m = Users{} }
func (m *Users) String() string { return proto.CompactTextString(m) }
func (*Users) ProtoMessage()    {}
func (*Users) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{3}
}

func (m *Users) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Users.Unmarshal(m, b)
}
func (m *Users) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Users.Marshal(b, m, deterministic)
}
func (m *Users) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Users.Merge(m, src)
}
func (m *Users) XXX_Size() int {
	return xxx_messageInfo_Users.Size(m)
}
func (m *Users) XXX_DiscardUnknown() {
	xxx_messageInfo_Users.DiscardUnknown(m)
}

var xxx_messageInfo_Users proto.InternalMessageInfo

func (m *Users) GetUsers() []*AnotherUser {
	if m != nil {
		return m.Users
	}
	return nil
}

type PinDisplay struct {
	ID                   uint64   `protobuf:"varint,1,opt,name=ID,json=iD,proto3" json:"ID,omitempty"`
	PinDir               string   `protobuf:"bytes,2,opt,name=PinDir,json=pinDir,proto3" json:"PinDir,omitempty"`
	Title                string   `protobuf:"bytes,3,opt,name=Title,json=title,proto3" json:"Title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PinDisplay) Reset()         { *m = PinDisplay{} }
func (m *PinDisplay) String() string { return proto.CompactTextString(m) }
func (*PinDisplay) ProtoMessage()    {}
func (*PinDisplay) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{4}
}

func (m *PinDisplay) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PinDisplay.Unmarshal(m, b)
}
func (m *PinDisplay) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PinDisplay.Marshal(b, m, deterministic)
}
func (m *PinDisplay) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PinDisplay.Merge(m, src)
}
func (m *PinDisplay) XXX_Size() int {
	return xxx_messageInfo_PinDisplay.Size(m)
}
func (m *PinDisplay) XXX_DiscardUnknown() {
	xxx_messageInfo_PinDisplay.DiscardUnknown(m)
}

var xxx_messageInfo_PinDisplay proto.InternalMessageInfo

func (m *PinDisplay) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *PinDisplay) GetPinDir() string {
	if m != nil {
		return m.PinDir
	}
	return ""
}

func (m *PinDisplay) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type UserAndPins struct {
	User                 *AnotherUser  `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Pins                 []*PinDisplay `protobuf:"bytes,2,rep,name=pins,proto3" json:"pins,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *UserAndPins) Reset()         { *m = UserAndPins{} }
func (m *UserAndPins) String() string { return proto.CompactTextString(m) }
func (*UserAndPins) ProtoMessage()    {}
func (*UserAndPins) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{5}
}

func (m *UserAndPins) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserAndPins.Unmarshal(m, b)
}
func (m *UserAndPins) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserAndPins.Marshal(b, m, deterministic)
}
func (m *UserAndPins) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserAndPins.Merge(m, src)
}
func (m *UserAndPins) XXX_Size() int {
	return xxx_messageInfo_UserAndPins.Size(m)
}
func (m *UserAndPins) XXX_DiscardUnknown() {
	xxx_messageInfo_UserAndPins.DiscardUnknown(m)
}

var xxx_messageInfo_UserAndPins proto.InternalMessageInfo

func (m *UserAndPins) GetUser() *AnotherUser {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *UserAndPins) GetPins() []*PinDisplay {
	if m != nil {
		return m.Pins
	}
	return nil
}

type UserIDAndFolloweeUsername struct {
	UserID               uint64   `protobuf:"varint,1,opt,name=UserID,json=userID,proto3" json:"UserID,omitempty"`
	FolloweeUsername     string   `protobuf:"bytes,2,opt,name=FolloweeUsername,json=followeeUsername,proto3" json:"FolloweeUsername,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserIDAndFolloweeUsername) Reset()         { *m = UserIDAndFolloweeUsername{} }
func (m *UserIDAndFolloweeUsername) String() string { return proto.CompactTextString(m) }
func (*UserIDAndFolloweeUsername) ProtoMessage()    {}
func (*UserIDAndFolloweeUsername) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{6}
}

func (m *UserIDAndFolloweeUsername) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserIDAndFolloweeUsername.Unmarshal(m, b)
}
func (m *UserIDAndFolloweeUsername) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserIDAndFolloweeUsername.Marshal(b, m, deterministic)
}
func (m *UserIDAndFolloweeUsername) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserIDAndFolloweeUsername.Merge(m, src)
}
func (m *UserIDAndFolloweeUsername) XXX_Size() int {
	return xxx_messageInfo_UserIDAndFolloweeUsername.Size(m)
}
func (m *UserIDAndFolloweeUsername) XXX_DiscardUnknown() {
	xxx_messageInfo_UserIDAndFolloweeUsername.DiscardUnknown(m)
}

var xxx_messageInfo_UserIDAndFolloweeUsername proto.InternalMessageInfo

func (m *UserIDAndFolloweeUsername) GetUserID() uint64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *UserIDAndFolloweeUsername) GetFolloweeUsername() string {
	if m != nil {
		return m.FolloweeUsername
	}
	return ""
}

func init() {
	proto.RegisterType((*Nothing)(nil), "user_service.Nothing")
	proto.RegisterType((*Username)(nil), "user_service.Username")
	proto.RegisterType((*AnotherUser)(nil), "user_service.AnotherUser")
	proto.RegisterType((*Users)(nil), "user_service.Users")
	proto.RegisterType((*PinDisplay)(nil), "user_service.PinDisplay")
	proto.RegisterType((*UserAndPins)(nil), "user_service.UserAndPins")
	proto.RegisterType((*UserIDAndFolloweeUsername)(nil), "user_service.UserIDAndFolloweeUsername")
}

func init() { proto.RegisterFile("user_service.proto", fileDescriptor_292f630cd9eb4c90) }

var fileDescriptor_292f630cd9eb4c90 = []byte{
	// 487 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0xd1, 0x8e, 0xd2, 0x40,
	0x14, 0x0d, 0xa5, 0x2d, 0xe5, 0x62, 0x14, 0x47, 0x25, 0x03, 0x31, 0xba, 0xe9, 0x83, 0x6e, 0x8c,
	0xae, 0xc9, 0x9a, 0x18, 0x5f, 0xab, 0x75, 0x0d, 0x3e, 0x6c, 0xb0, 0xe8, 0xf3, 0x66, 0x80, 0x2b,
	0x3b, 0xa6, 0xb4, 0xcd, 0xcc, 0x94, 0x0d, 0x1f, 0xe3, 0x57, 0xf8, 0x83, 0x66, 0x6e, 0x0b, 0x6c,
	0x17, 0xe2, 0x93, 0x6f, 0x3d, 0xe7, 0x9e, 0x7b, 0xe7, 0xdc, 0xd3, 0xc9, 0x00, 0x2b, 0x35, 0xaa,
	0x2b, 0x8d, 0x6a, 0x2d, 0xe7, 0x78, 0x56, 0xa8, 0xdc, 0xe4, 0xec, 0xde, 0x6d, 0x2e, 0x7c, 0x0e,
	0x9d, 0xcb, 0xdc, 0x5c, 0xcb, 0x6c, 0xc9, 0x1e, 0x83, 0xb7, 0x28, 0x57, 0xab, 0x0d, 0x6f, 0x9d,
	0xb4, 0x4e, 0x83, 0xa4, 0x02, 0xe1, 0x0b, 0x08, 0x7e, 0x68, 0x54, 0x99, 0x58, 0x21, 0x1b, 0xed,
	0xbf, 0x49, 0xd4, 0x4d, 0x82, 0xb2, 0xc6, 0xe1, 0x6f, 0x07, 0x7a, 0x51, 0x96, 0x9b, 0x6b, 0x54,
	0x56, 0xc3, 0xee, 0x83, 0x33, 0x8e, 0x49, 0xe5, 0x26, 0x8e, 0x8c, 0x1b, 0xbd, 0x4e, 0xb3, 0x97,
	0x31, 0x70, 0x2f, 0x2d, 0xdf, 0x26, 0xde, 0x25, 0x8e, 0x43, 0x67, 0x5a, 0x56, 0x72, 0x97, 0xe8,
	0x8e, 0x2e, 0x77, 0x2e, 0x26, 0x42, 0xeb, 0x9b, 0x5c, 0x2d, 0xb8, 0x57, 0x4d, 0x2a, 0x6a, 0x6c,
	0x77, 0xf8, 0xbc, 0x12, 0x32, 0xe5, 0x3e, 0x15, 0x3c, 0xb4, 0x80, 0xf5, 0xa1, 0x1d, 0x2d, 0x91,
	0x77, 0xc8, 0x4c, 0x5b, 0x2c, 0x91, 0x0d, 0xc0, 0x9f, 0x1a, 0x61, 0x4a, 0xcd, 0x03, 0x12, 0xfa,
	0x9a, 0x10, 0x7b, 0x0a, 0xdd, 0x68, 0x2d, 0x8c, 0x50, 0xb1, 0x54, 0xbc, 0x4b, 0xa5, 0xae, 0xd8,
	0x12, 0xf6, 0xe4, 0xb1, 0x8e, 0xe6, 0x46, 0xae, 0x91, 0x03, 0x85, 0x14, 0xc8, 0x1a, 0xb3, 0x67,
	0x00, 0x63, 0x7d, 0x91, 0xa7, 0x69, 0x7e, 0x83, 0xc8, 0x7b, 0x54, 0x05, 0xb9, 0x63, 0xc2, 0x0f,
	0xe0, 0xd9, 0xfd, 0x35, 0x7b, 0x0b, 0x9e, 0x5d, 0x5c, 0xf3, 0xd6, 0x49, 0xfb, 0xb4, 0x77, 0x3e,
	0x3c, 0x6b, 0xfc, 0xa3, 0x5b, 0x11, 0x26, 0x95, 0x2e, 0xfc, 0x0a, 0x30, 0x91, 0x59, 0x2c, 0x75,
	0x91, 0x8a, 0xcd, 0x41, 0xae, 0x03, 0xf0, 0xa9, 0xaa, 0xea, 0x54, 0xfd, 0x82, 0x90, 0x4d, 0xe2,
	0xbb, 0x34, 0xe9, 0x36, 0x54, 0xcf, 0x58, 0x10, 0xfe, 0x82, 0x9e, 0x1d, 0x1d, 0x65, 0x8b, 0x89,
	0xcc, 0x34, 0x7b, 0x03, 0xae, 0x3d, 0x83, 0xc6, 0xfd, 0xd3, 0x0a, 0xc9, 0xd8, 0x6b, 0x70, 0x0b,
	0x99, 0x69, 0xee, 0x90, 0x73, 0xde, 0x94, 0xef, 0x3d, 0x26, 0xa4, 0x0a, 0xaf, 0x60, 0x68, 0x7b,
	0xc7, 0x71, 0x94, 0x2d, 0xb6, 0x31, 0xec, 0xae, 0xd2, 0x00, 0xfc, 0xaa, 0x58, 0xaf, 0xe2, 0x97,
	0x84, 0xd8, 0x2b, 0xe8, 0xdf, 0xd5, 0xd6, 0x8b, 0xf5, 0x7f, 0xde, 0xe1, 0xcf, 0xff, 0x38, 0xd5,
	0x36, 0xd3, 0xca, 0x01, 0x7b, 0x0f, 0xc1, 0x17, 0x34, 0x55, 0xca, 0x4f, 0x9a, 0xe6, 0xea, 0x3b,
	0x3e, 0x7a, 0xd4, 0xa4, 0x2b, 0xed, 0x05, 0x3c, 0xac, 0xfb, 0x3e, 0x6e, 0xf6, 0x06, 0x0f, 0x95,
	0x96, 0x1f, 0x0d, 0x0f, 0xf9, 0x6d, 0x9a, 0xdf, 0xe0, 0xc1, 0x27, 0x85, 0xc2, 0xe0, 0xb4, 0x9c,
	0xe9, 0xb9, 0x92, 0x33, 0x64, 0x2f, 0x0f, 0xd5, 0x47, 0xf3, 0x18, 0x1d, 0xf7, 0x6b, 0x47, 0xc6,
	0x98, 0xe2, 0x7f, 0x1c, 0x39, 0xf3, 0xe9, 0x19, 0x78, 0xf7, 0x37, 0x00, 0x00, 0xff, 0xff, 0xb0,
	0x52, 0x58, 0xaf, 0x1c, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	GetUsers(ctx context.Context, in *Nothing, opts ...grpc.CallOption) (*Users, error)
	GetUserByUsername(ctx context.Context, in *Username, opts ...grpc.CallOption) (*UserAndPins, error)
	CreateSubscribe(ctx context.Context, in *UserIDAndFolloweeUsername, opts ...grpc.CallOption) (*Nothing, error)
	DeleteSubscribe(ctx context.Context, in *UserIDAndFolloweeUsername, opts ...grpc.CallOption) (*Nothing, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) GetUsers(ctx context.Context, in *Nothing, opts ...grpc.CallOption) (*Users, error) {
	out := new(Users)
	err := c.cc.Invoke(ctx, "/user_service.UserService/GetUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetUserByUsername(ctx context.Context, in *Username, opts ...grpc.CallOption) (*UserAndPins, error) {
	out := new(UserAndPins)
	err := c.cc.Invoke(ctx, "/user_service.UserService/GetUserByUsername", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) CreateSubscribe(ctx context.Context, in *UserIDAndFolloweeUsername, opts ...grpc.CallOption) (*Nothing, error) {
	out := new(Nothing)
	err := c.cc.Invoke(ctx, "/user_service.UserService/CreateSubscribe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) DeleteSubscribe(ctx context.Context, in *UserIDAndFolloweeUsername, opts ...grpc.CallOption) (*Nothing, error) {
	out := new(Nothing)
	err := c.cc.Invoke(ctx, "/user_service.UserService/DeleteSubscribe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	GetUsers(context.Context, *Nothing) (*Users, error)
	GetUserByUsername(context.Context, *Username) (*UserAndPins, error)
	CreateSubscribe(context.Context, *UserIDAndFolloweeUsername) (*Nothing, error)
	DeleteSubscribe(context.Context, *UserIDAndFolloweeUsername) (*Nothing, error)
}

// UnimplementedUserServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserServiceServer struct {
}

func (*UnimplementedUserServiceServer) GetUsers(ctx context.Context, req *Nothing) (*Users, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUsers not implemented")
}
func (*UnimplementedUserServiceServer) GetUserByUsername(ctx context.Context, req *Username) (*UserAndPins, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserByUsername not implemented")
}
func (*UnimplementedUserServiceServer) CreateSubscribe(ctx context.Context, req *UserIDAndFolloweeUsername) (*Nothing, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSubscribe not implemented")
}
func (*UnimplementedUserServiceServer) DeleteSubscribe(ctx context.Context, req *UserIDAndFolloweeUsername) (*Nothing, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSubscribe not implemented")
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_GetUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Nothing)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_service.UserService/GetUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetUsers(ctx, req.(*Nothing))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetUserByUsername_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Username)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetUserByUsername(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_service.UserService/GetUserByUsername",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetUserByUsername(ctx, req.(*Username))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_CreateSubscribe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserIDAndFolloweeUsername)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).CreateSubscribe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_service.UserService/CreateSubscribe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).CreateSubscribe(ctx, req.(*UserIDAndFolloweeUsername))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_DeleteSubscribe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserIDAndFolloweeUsername)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).DeleteSubscribe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_service.UserService/DeleteSubscribe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).DeleteSubscribe(ctx, req.(*UserIDAndFolloweeUsername))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user_service.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUsers",
			Handler:    _UserService_GetUsers_Handler,
		},
		{
			MethodName: "GetUserByUsername",
			Handler:    _UserService_GetUserByUsername_Handler,
		},
		{
			MethodName: "CreateSubscribe",
			Handler:    _UserService_CreateSubscribe_Handler,
		},
		{
			MethodName: "DeleteSubscribe",
			Handler:    _UserService_DeleteSubscribe_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user_service.proto",
}
