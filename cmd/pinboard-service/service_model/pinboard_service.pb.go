// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pinboard_service.proto

package pinboard_service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Nothing struct {
	Dummy                bool     `protobuf:"varint,1,opt,name=dummy,proto3" json:"dummy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Nothing) Reset()         { *m = Nothing{} }
func (m *Nothing) String() string { return proto.CompactTextString(m) }
func (*Nothing) ProtoMessage()    {}
func (*Nothing) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf9340dc7169e8e2, []int{0}
}

func (m *Nothing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Nothing.Unmarshal(m, b)
}
func (m *Nothing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Nothing.Marshal(b, m, deterministic)
}
func (m *Nothing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Nothing.Merge(m, src)
}
func (m *Nothing) XXX_Size() int {
	return xxx_messageInfo_Nothing.Size(m)
}
func (m *Nothing) XXX_DiscardUnknown() {
	xxx_messageInfo_Nothing.DiscardUnknown(m)
}

var xxx_messageInfo_Nothing proto.InternalMessageInfo

func (m *Nothing) GetDummy() bool {
	if m != nil {
		return m.Dummy
	}
	return false
}

type LastID struct {
	LastID               uint64   `protobuf:"varint,1,opt,name=LastID,json=lastID,proto3" json:"LastID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LastID) Reset()         { *m = LastID{} }
func (m *LastID) String() string { return proto.CompactTextString(m) }
func (*LastID) ProtoMessage()    {}
func (*LastID) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf9340dc7169e8e2, []int{1}
}

func (m *LastID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LastID.Unmarshal(m, b)
}
func (m *LastID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LastID.Marshal(b, m, deterministic)
}
func (m *LastID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LastID.Merge(m, src)
}
func (m *LastID) XXX_Size() int {
	return xxx_messageInfo_LastID.Size(m)
}
func (m *LastID) XXX_DiscardUnknown() {
	xxx_messageInfo_LastID.DiscardUnknown(m)
}

var xxx_messageInfo_LastID proto.InternalMessageInfo

func (m *LastID) GetLastID() uint64 {
	if m != nil {
		return m.LastID
	}
	return 0
}

type NewBoard struct {
	OwnerID              uint64   `protobuf:"varint,1,opt,name=OwnerID,json=ownerID,proto3" json:"OwnerID,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=Title,json=title,proto3" json:"Title,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=Description,json=description,proto3" json:"Description,omitempty"`
	Category             string   `protobuf:"bytes,4,opt,name=Category,json=category,proto3" json:"Category,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewBoard) Reset()         { *m = NewBoard{} }
func (m *NewBoard) String() string { return proto.CompactTextString(m) }
func (*NewBoard) ProtoMessage()    {}
func (*NewBoard) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf9340dc7169e8e2, []int{2}
}

func (m *NewBoard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewBoard.Unmarshal(m, b)
}
func (m *NewBoard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewBoard.Marshal(b, m, deterministic)
}
func (m *NewBoard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewBoard.Merge(m, src)
}
func (m *NewBoard) XXX_Size() int {
	return xxx_messageInfo_NewBoard.Size(m)
}
func (m *NewBoard) XXX_DiscardUnknown() {
	xxx_messageInfo_NewBoard.DiscardUnknown(m)
}

var xxx_messageInfo_NewBoard proto.InternalMessageInfo

func (m *NewBoard) GetOwnerID() uint64 {
	if m != nil {
		return m.OwnerID
	}
	return 0
}

func (m *NewBoard) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *NewBoard) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *NewBoard) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

type BoardID struct {
	BoardID              uint64   `protobuf:"varint,1,opt,name=boardID,proto3" json:"boardID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BoardID) Reset()         { *m = BoardID{} }
func (m *BoardID) String() string { return proto.CompactTextString(m) }
func (*BoardID) ProtoMessage()    {}
func (*BoardID) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf9340dc7169e8e2, []int{3}
}

func (m *BoardID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BoardID.Unmarshal(m, b)
}
func (m *BoardID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BoardID.Marshal(b, m, deterministic)
}
func (m *BoardID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BoardID.Merge(m, src)
}
func (m *BoardID) XXX_Size() int {
	return xxx_messageInfo_BoardID.Size(m)
}
func (m *BoardID) XXX_DiscardUnknown() {
	xxx_messageInfo_BoardID.DiscardUnknown(m)
}

var xxx_messageInfo_BoardID proto.InternalMessageInfo

func (m *BoardID) GetBoardID() uint64 {
	if m != nil {
		return m.BoardID
	}
	return 0
}

type PinID struct {
	PinID                uint64   `protobuf:"varint,1,opt,name=pinID,proto3" json:"pinID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PinID) Reset()         { *m = PinID{} }
func (m *PinID) String() string { return proto.CompactTextString(m) }
func (*PinID) ProtoMessage()    {}
func (*PinID) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf9340dc7169e8e2, []int{4}
}

func (m *PinID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PinID.Unmarshal(m, b)
}
func (m *PinID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PinID.Marshal(b, m, deterministic)
}
func (m *PinID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PinID.Merge(m, src)
}
func (m *PinID) XXX_Size() int {
	return xxx_messageInfo_PinID.Size(m)
}
func (m *PinID) XXX_DiscardUnknown() {
	xxx_messageInfo_PinID.DiscardUnknown(m)
}

var xxx_messageInfo_PinID proto.InternalMessageInfo

func (m *PinID) GetPinID() uint64 {
	if m != nil {
		return m.PinID
	}
	return 0
}

type Board struct {
	ID                   uint64   `protobuf:"varint,1,opt,name=ID,json=iD,proto3" json:"ID,omitempty"`
	OwnerID              uint64   `protobuf:"varint,2,opt,name=OwnerID,json=ownerID,proto3" json:"OwnerID,omitempty"`
	Title                string   `protobuf:"bytes,3,opt,name=Title,json=title,proto3" json:"Title,omitempty"`
	Description          string   `protobuf:"bytes,4,opt,name=Description,json=description,proto3" json:"Description,omitempty"`
	Category             string   `protobuf:"bytes,5,opt,name=Category,json=category,proto3" json:"Category,omitempty"`
	CreatedTime          string   `protobuf:"bytes,6,opt,name=CreatedTime,json=createdTime,proto3" json:"CreatedTime,omitempty"`
	IsDeleted            bool     `protobuf:"varint,7,opt,name=IsDeleted,json=isDeleted,proto3" json:"IsDeleted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Board) Reset()         { *m = Board{} }
func (m *Board) String() string { return proto.CompactTextString(m) }
func (*Board) ProtoMessage()    {}
func (*Board) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf9340dc7169e8e2, []int{5}
}

func (m *Board) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Board.Unmarshal(m, b)
}
func (m *Board) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Board.Marshal(b, m, deterministic)
}
func (m *Board) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Board.Merge(m, src)
}
func (m *Board) XXX_Size() int {
	return xxx_messageInfo_Board.Size(m)
}
func (m *Board) XXX_DiscardUnknown() {
	xxx_messageInfo_Board.DiscardUnknown(m)
}

var xxx_messageInfo_Board proto.InternalMessageInfo

func (m *Board) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *Board) GetOwnerID() uint64 {
	if m != nil {
		return m.OwnerID
	}
	return 0
}

func (m *Board) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Board) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Board) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *Board) GetCreatedTime() string {
	if m != nil {
		return m.CreatedTime
	}
	return ""
}

func (m *Board) GetIsDeleted() bool {
	if m != nil {
		return m.IsDeleted
	}
	return false
}

type BoardAndPins struct {
	Board                *Board              `protobuf:"bytes,1,opt,name=board,proto3" json:"board,omitempty"`
	Pins                 []*BoardAndPins_Pin `protobuf:"bytes,2,rep,name=pins,proto3" json:"pins,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *BoardAndPins) Reset()         { *m = BoardAndPins{} }
func (m *BoardAndPins) String() string { return proto.CompactTextString(m) }
func (*BoardAndPins) ProtoMessage()    {}
func (*BoardAndPins) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf9340dc7169e8e2, []int{6}
}

func (m *BoardAndPins) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BoardAndPins.Unmarshal(m, b)
}
func (m *BoardAndPins) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BoardAndPins.Marshal(b, m, deterministic)
}
func (m *BoardAndPins) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BoardAndPins.Merge(m, src)
}
func (m *BoardAndPins) XXX_Size() int {
	return xxx_messageInfo_BoardAndPins.Size(m)
}
func (m *BoardAndPins) XXX_DiscardUnknown() {
	xxx_messageInfo_BoardAndPins.DiscardUnknown(m)
}

var xxx_messageInfo_BoardAndPins proto.InternalMessageInfo

func (m *BoardAndPins) GetBoard() *Board {
	if m != nil {
		return m.Board
	}
	return nil
}

func (m *BoardAndPins) GetPins() []*BoardAndPins_Pin {
	if m != nil {
		return m.Pins
	}
	return nil
}

type BoardAndPins_Pin struct {
	ID                   uint64   `protobuf:"varint,1,opt,name=ID,json=iD,proto3" json:"ID,omitempty"`
	OwnerID              uint64   `protobuf:"varint,2,opt,name=OwnerID,json=ownerID,proto3" json:"OwnerID,omitempty"`
	AuthorID             uint64   `protobuf:"varint,3,opt,name=AuthorID,json=authorID,proto3" json:"AuthorID,omitempty"`
	BoardID              uint64   `protobuf:"varint,4,opt,name=BoardID,json=boardID,proto3" json:"BoardID,omitempty"`
	PinDir               string   `protobuf:"bytes,5,opt,name=PinDir,json=pinDir,proto3" json:"PinDir,omitempty"`
	Title                string   `protobuf:"bytes,6,opt,name=Title,json=title,proto3" json:"Title,omitempty"`
	Description          string   `protobuf:"bytes,7,opt,name=Description,json=description,proto3" json:"Description,omitempty"`
	CreatedTime          string   `protobuf:"bytes,8,opt,name=CreatedTime,json=createdTime,proto3" json:"CreatedTime,omitempty"`
	IsDeleted            bool     `protobuf:"varint,9,opt,name=IsDeleted,json=isDeleted,proto3" json:"IsDeleted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BoardAndPins_Pin) Reset()         { *m = BoardAndPins_Pin{} }
func (m *BoardAndPins_Pin) String() string { return proto.CompactTextString(m) }
func (*BoardAndPins_Pin) ProtoMessage()    {}
func (*BoardAndPins_Pin) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf9340dc7169e8e2, []int{6, 0}
}

func (m *BoardAndPins_Pin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BoardAndPins_Pin.Unmarshal(m, b)
}
func (m *BoardAndPins_Pin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BoardAndPins_Pin.Marshal(b, m, deterministic)
}
func (m *BoardAndPins_Pin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BoardAndPins_Pin.Merge(m, src)
}
func (m *BoardAndPins_Pin) XXX_Size() int {
	return xxx_messageInfo_BoardAndPins_Pin.Size(m)
}
func (m *BoardAndPins_Pin) XXX_DiscardUnknown() {
	xxx_messageInfo_BoardAndPins_Pin.DiscardUnknown(m)
}

var xxx_messageInfo_BoardAndPins_Pin proto.InternalMessageInfo

func (m *BoardAndPins_Pin) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *BoardAndPins_Pin) GetOwnerID() uint64 {
	if m != nil {
		return m.OwnerID
	}
	return 0
}

func (m *BoardAndPins_Pin) GetAuthorID() uint64 {
	if m != nil {
		return m.AuthorID
	}
	return 0
}

func (m *BoardAndPins_Pin) GetBoardID() uint64 {
	if m != nil {
		return m.BoardID
	}
	return 0
}

func (m *BoardAndPins_Pin) GetPinDir() string {
	if m != nil {
		return m.PinDir
	}
	return ""
}

func (m *BoardAndPins_Pin) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *BoardAndPins_Pin) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *BoardAndPins_Pin) GetCreatedTime() string {
	if m != nil {
		return m.CreatedTime
	}
	return ""
}

func (m *BoardAndPins_Pin) GetIsDeleted() bool {
	if m != nil {
		return m.IsDeleted
	}
	return false
}

type NewPin struct {
	UserID               uint64   `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	BoardID              uint64   `protobuf:"varint,2,opt,name=BoardID,json=boardID,proto3" json:"BoardID,omitempty"`
	Title                string   `protobuf:"bytes,3,opt,name=Title,json=title,proto3" json:"Title,omitempty"`
	Description          string   `protobuf:"bytes,4,opt,name=Description,json=description,proto3" json:"Description,omitempty"`
	PinDir               string   `protobuf:"bytes,5,opt,name=PinDir,json=pinDir,proto3" json:"PinDir,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewPin) Reset()         { *m = NewPin{} }
func (m *NewPin) String() string { return proto.CompactTextString(m) }
func (*NewPin) ProtoMessage()    {}
func (*NewPin) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf9340dc7169e8e2, []int{7}
}

func (m *NewPin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewPin.Unmarshal(m, b)
}
func (m *NewPin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewPin.Marshal(b, m, deterministic)
}
func (m *NewPin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewPin.Merge(m, src)
}
func (m *NewPin) XXX_Size() int {
	return xxx_messageInfo_NewPin.Size(m)
}
func (m *NewPin) XXX_DiscardUnknown() {
	xxx_messageInfo_NewPin.DiscardUnknown(m)
}

var xxx_messageInfo_NewPin proto.InternalMessageInfo

func (m *NewPin) GetUserID() uint64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *NewPin) GetBoardID() uint64 {
	if m != nil {
		return m.BoardID
	}
	return 0
}

func (m *NewPin) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *NewPin) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *NewPin) GetPinDir() string {
	if m != nil {
		return m.PinDir
	}
	return ""
}

type Pin struct {
	ID                   uint64   `protobuf:"varint,1,opt,name=ID,json=iD,proto3" json:"ID,omitempty"`
	OwnerID              uint64   `protobuf:"varint,2,opt,name=OwnerID,json=ownerID,proto3" json:"OwnerID,omitempty"`
	AuthorID             uint64   `protobuf:"varint,3,opt,name=AuthorID,json=authorID,proto3" json:"AuthorID,omitempty"`
	BoardID              uint64   `protobuf:"varint,4,opt,name=BoardID,json=boardID,proto3" json:"BoardID,omitempty"`
	PinDir               string   `protobuf:"bytes,5,opt,name=pinDir,proto3" json:"pinDir,omitempty"`
	Title                string   `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	Description          string   `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	CreatedTime          string   `protobuf:"bytes,8,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
	IsDeleted            bool     `protobuf:"varint,9,opt,name=isDeleted,proto3" json:"isDeleted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pin) Reset()         { *m = Pin{} }
func (m *Pin) String() string { return proto.CompactTextString(m) }
func (*Pin) ProtoMessage()    {}
func (*Pin) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf9340dc7169e8e2, []int{8}
}

func (m *Pin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pin.Unmarshal(m, b)
}
func (m *Pin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pin.Marshal(b, m, deterministic)
}
func (m *Pin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pin.Merge(m, src)
}
func (m *Pin) XXX_Size() int {
	return xxx_messageInfo_Pin.Size(m)
}
func (m *Pin) XXX_DiscardUnknown() {
	xxx_messageInfo_Pin.DiscardUnknown(m)
}

var xxx_messageInfo_Pin proto.InternalMessageInfo

func (m *Pin) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *Pin) GetOwnerID() uint64 {
	if m != nil {
		return m.OwnerID
	}
	return 0
}

func (m *Pin) GetAuthorID() uint64 {
	if m != nil {
		return m.AuthorID
	}
	return 0
}

func (m *Pin) GetBoardID() uint64 {
	if m != nil {
		return m.BoardID
	}
	return 0
}

func (m *Pin) GetPinDir() string {
	if m != nil {
		return m.PinDir
	}
	return ""
}

func (m *Pin) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Pin) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Pin) GetCreatedTime() string {
	if m != nil {
		return m.CreatedTime
	}
	return ""
}

func (m *Pin) GetIsDeleted() bool {
	if m != nil {
		return m.IsDeleted
	}
	return false
}

type FullPin struct {
	ID                   uint64   `protobuf:"varint,1,opt,name=ID,json=iD,proto3" json:"ID,omitempty"`
	OwnerUsername        string   `protobuf:"bytes,2,opt,name=OwnerUsername,json=ownerUsername,proto3" json:"OwnerUsername,omitempty"`
	AuthorUsername       string   `protobuf:"bytes,3,opt,name=AuthorUsername,json=authorUsername,proto3" json:"AuthorUsername,omitempty"`
	BoardID              uint64   `protobuf:"varint,4,opt,name=BoardID,json=boardID,proto3" json:"BoardID,omitempty"`
	PinDir               string   `protobuf:"bytes,5,opt,name=PinDir,json=pinDir,proto3" json:"PinDir,omitempty"`
	Title                string   `protobuf:"bytes,6,opt,name=Title,json=title,proto3" json:"Title,omitempty"`
	Description          string   `protobuf:"bytes,7,opt,name=Description,json=description,proto3" json:"Description,omitempty"`
	CratedTime           string   `protobuf:"bytes,8,opt,name=CratedTime,json=cratedTime,proto3" json:"CratedTime,omitempty"`
	IsDeleted            bool     `protobuf:"varint,9,opt,name=IsDeleted,json=isDeleted,proto3" json:"IsDeleted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FullPin) Reset()         { *m = FullPin{} }
func (m *FullPin) String() string { return proto.CompactTextString(m) }
func (*FullPin) ProtoMessage()    {}
func (*FullPin) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf9340dc7169e8e2, []int{9}
}

func (m *FullPin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FullPin.Unmarshal(m, b)
}
func (m *FullPin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FullPin.Marshal(b, m, deterministic)
}
func (m *FullPin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FullPin.Merge(m, src)
}
func (m *FullPin) XXX_Size() int {
	return xxx_messageInfo_FullPin.Size(m)
}
func (m *FullPin) XXX_DiscardUnknown() {
	xxx_messageInfo_FullPin.DiscardUnknown(m)
}

var xxx_messageInfo_FullPin proto.InternalMessageInfo

func (m *FullPin) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *FullPin) GetOwnerUsername() string {
	if m != nil {
		return m.OwnerUsername
	}
	return ""
}

func (m *FullPin) GetAuthorUsername() string {
	if m != nil {
		return m.AuthorUsername
	}
	return ""
}

func (m *FullPin) GetBoardID() uint64 {
	if m != nil {
		return m.BoardID
	}
	return 0
}

func (m *FullPin) GetPinDir() string {
	if m != nil {
		return m.PinDir
	}
	return ""
}

func (m *FullPin) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *FullPin) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *FullPin) GetCratedTime() string {
	if m != nil {
		return m.CratedTime
	}
	return ""
}

func (m *FullPin) GetIsDeleted() bool {
	if m != nil {
		return m.IsDeleted
	}
	return false
}

type CommentDisplay struct {
	Text                 string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	CreatedTime          string   `protobuf:"bytes,2,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
	Author               string   `protobuf:"bytes,3,opt,name=Author,json=author,proto3" json:"Author,omitempty"`
	AuthorPincture       string   `protobuf:"bytes,4,opt,name=AuthorPincture,json=authorPincture,proto3" json:"AuthorPincture,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommentDisplay) Reset()         { *m = CommentDisplay{} }
func (m *CommentDisplay) String() string { return proto.CompactTextString(m) }
func (*CommentDisplay) ProtoMessage()    {}
func (*CommentDisplay) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf9340dc7169e8e2, []int{10}
}

func (m *CommentDisplay) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommentDisplay.Unmarshal(m, b)
}
func (m *CommentDisplay) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommentDisplay.Marshal(b, m, deterministic)
}
func (m *CommentDisplay) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommentDisplay.Merge(m, src)
}
func (m *CommentDisplay) XXX_Size() int {
	return xxx_messageInfo_CommentDisplay.Size(m)
}
func (m *CommentDisplay) XXX_DiscardUnknown() {
	xxx_messageInfo_CommentDisplay.DiscardUnknown(m)
}

var xxx_messageInfo_CommentDisplay proto.InternalMessageInfo

func (m *CommentDisplay) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *CommentDisplay) GetCreatedTime() string {
	if m != nil {
		return m.CreatedTime
	}
	return ""
}

func (m *CommentDisplay) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *CommentDisplay) GetAuthorPincture() string {
	if m != nil {
		return m.AuthorPincture
	}
	return ""
}

type PinAndComments struct {
	Pin                  *FullPin                         `protobuf:"bytes,1,opt,name=pin,proto3" json:"pin,omitempty"`
	Comments             []*PinAndComments_CommentDisplay `protobuf:"bytes,2,rep,name=comments,proto3" json:"comments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *PinAndComments) Reset()         { *m = PinAndComments{} }
func (m *PinAndComments) String() string { return proto.CompactTextString(m) }
func (*PinAndComments) ProtoMessage()    {}
func (*PinAndComments) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf9340dc7169e8e2, []int{11}
}

func (m *PinAndComments) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PinAndComments.Unmarshal(m, b)
}
func (m *PinAndComments) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PinAndComments.Marshal(b, m, deterministic)
}
func (m *PinAndComments) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PinAndComments.Merge(m, src)
}
func (m *PinAndComments) XXX_Size() int {
	return xxx_messageInfo_PinAndComments.Size(m)
}
func (m *PinAndComments) XXX_DiscardUnknown() {
	xxx_messageInfo_PinAndComments.DiscardUnknown(m)
}

var xxx_messageInfo_PinAndComments proto.InternalMessageInfo

func (m *PinAndComments) GetPin() *FullPin {
	if m != nil {
		return m.Pin
	}
	return nil
}

func (m *PinAndComments) GetComments() []*PinAndComments_CommentDisplay {
	if m != nil {
		return m.Comments
	}
	return nil
}

type PinAndComments_CommentDisplay struct {
	Text                 string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	CreatedTime          string   `protobuf:"bytes,2,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
	Author               string   `protobuf:"bytes,3,opt,name=Author,json=author,proto3" json:"Author,omitempty"`
	AuthorPincture       string   `protobuf:"bytes,4,opt,name=AuthorPincture,json=authorPincture,proto3" json:"AuthorPincture,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PinAndComments_CommentDisplay) Reset()         { *m = PinAndComments_CommentDisplay{} }
func (m *PinAndComments_CommentDisplay) String() string { return proto.CompactTextString(m) }
func (*PinAndComments_CommentDisplay) ProtoMessage()    {}
func (*PinAndComments_CommentDisplay) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf9340dc7169e8e2, []int{11, 0}
}

func (m *PinAndComments_CommentDisplay) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PinAndComments_CommentDisplay.Unmarshal(m, b)
}
func (m *PinAndComments_CommentDisplay) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PinAndComments_CommentDisplay.Marshal(b, m, deterministic)
}
func (m *PinAndComments_CommentDisplay) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PinAndComments_CommentDisplay.Merge(m, src)
}
func (m *PinAndComments_CommentDisplay) XXX_Size() int {
	return xxx_messageInfo_PinAndComments_CommentDisplay.Size(m)
}
func (m *PinAndComments_CommentDisplay) XXX_DiscardUnknown() {
	xxx_messageInfo_PinAndComments_CommentDisplay.DiscardUnknown(m)
}

var xxx_messageInfo_PinAndComments_CommentDisplay proto.InternalMessageInfo

func (m *PinAndComments_CommentDisplay) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *PinAndComments_CommentDisplay) GetCreatedTime() string {
	if m != nil {
		return m.CreatedTime
	}
	return ""
}

func (m *PinAndComments_CommentDisplay) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *PinAndComments_CommentDisplay) GetAuthorPincture() string {
	if m != nil {
		return m.AuthorPincture
	}
	return ""
}

func init() {
	proto.RegisterType((*Nothing)(nil), "pinboard_service.Nothing")
	proto.RegisterType((*LastID)(nil), "pinboard_service.LastID")
	proto.RegisterType((*NewBoard)(nil), "pinboard_service.NewBoard")
	proto.RegisterType((*BoardID)(nil), "pinboard_service.BoardID")
	proto.RegisterType((*PinID)(nil), "pinboard_service.PinID")
	proto.RegisterType((*Board)(nil), "pinboard_service.Board")
	proto.RegisterType((*BoardAndPins)(nil), "pinboard_service.BoardAndPins")
	proto.RegisterType((*BoardAndPins_Pin)(nil), "pinboard_service.BoardAndPins.Pin")
	proto.RegisterType((*NewPin)(nil), "pinboard_service.NewPin")
	proto.RegisterType((*Pin)(nil), "pinboard_service.Pin")
	proto.RegisterType((*FullPin)(nil), "pinboard_service.FullPin")
	proto.RegisterType((*CommentDisplay)(nil), "pinboard_service.CommentDisplay")
	proto.RegisterType((*PinAndComments)(nil), "pinboard_service.PinAndComments")
	proto.RegisterType((*PinAndComments_CommentDisplay)(nil), "pinboard_service.PinAndComments.CommentDisplay")
}

func init() { proto.RegisterFile("pinboard_service.proto", fileDescriptor_bf9340dc7169e8e2) }

var fileDescriptor_bf9340dc7169e8e2 = []byte{
	// 695 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x56, 0xcb, 0x6e, 0xd3, 0x4c,
	0x14, 0x96, 0x9d, 0xc4, 0x76, 0x4e, 0xfe, 0xe6, 0x47, 0x23, 0x94, 0xba, 0x16, 0x94, 0xc8, 0x20,
	0x54, 0x09, 0x11, 0xa4, 0x22, 0xb1, 0x45, 0x25, 0x86, 0x2a, 0x02, 0x15, 0xcb, 0x94, 0x35, 0x72,
	0xed, 0x51, 0x3b, 0x52, 0x32, 0xb6, 0xc6, 0x13, 0xda, 0xbe, 0x00, 0x0b, 0x36, 0x2c, 0x78, 0x04,
	0x9e, 0x85, 0xc7, 0x61, 0xc9, 0x1e, 0xcd, 0xc5, 0xb9, 0x39, 0x4e, 0x80, 0x45, 0xc5, 0x6e, 0xce,
	0x6d, 0xe6, 0x7c, 0xdf, 0x77, 0x72, 0x1c, 0xe8, 0xe5, 0x84, 0x9e, 0x65, 0x31, 0x4b, 0x3f, 0x14,
	0x98, 0x7d, 0x24, 0x09, 0x1e, 0xe4, 0x2c, 0xe3, 0x19, 0xba, 0xb5, 0xea, 0xf7, 0xef, 0x81, 0x7d,
	0x92, 0xf1, 0x0b, 0x42, 0xcf, 0xd1, 0x6d, 0x68, 0xa5, 0xd3, 0xc9, 0xe4, 0xda, 0x35, 0xfa, 0xc6,
	0x81, 0x13, 0x29, 0xc3, 0xef, 0x83, 0xf5, 0x26, 0x2e, 0xf8, 0x28, 0x40, 0xbd, 0xf2, 0x24, 0x13,
	0x9a, 0x91, 0x35, 0x96, 0x96, 0x7f, 0x05, 0xce, 0x09, 0xbe, 0x7c, 0x21, 0xae, 0x45, 0x2e, 0xd8,
	0x6f, 0x2f, 0x29, 0x66, 0xb3, 0x24, 0x3b, 0x53, 0xa6, 0xb8, 0xfd, 0x94, 0xf0, 0x31, 0x76, 0xcd,
	0xbe, 0x71, 0xd0, 0x8e, 0x5a, 0x5c, 0x18, 0xa8, 0x0f, 0x9d, 0x00, 0x17, 0x09, 0x23, 0x39, 0x27,
	0x19, 0x75, 0x1b, 0x32, 0xd6, 0x49, 0xe7, 0x2e, 0xe4, 0x81, 0x33, 0x8c, 0x39, 0x3e, 0xcf, 0xd8,
	0xb5, 0xdb, 0x94, 0x61, 0x27, 0xd1, 0xb6, 0x7f, 0x1f, 0x6c, 0xf9, 0xec, 0x28, 0x10, 0x0f, 0x9f,
	0xa9, 0x63, 0xf9, 0xb0, 0x36, 0xfd, 0xbb, 0xd0, 0x0a, 0x09, 0x55, 0x1d, 0xe4, 0xe2, 0xa0, 0x13,
	0x94, 0xe1, 0x7f, 0x37, 0xa0, 0xa5, 0x7a, 0xef, 0x82, 0x39, 0x0b, 0x9a, 0x24, 0x58, 0xc4, 0x62,
	0xd6, 0x60, 0x69, 0x6c, 0xc0, 0xd2, 0xdc, 0x8c, 0xa5, 0xb5, 0x8c, 0x45, 0x54, 0x0f, 0x19, 0x8e,
	0x39, 0x4e, 0x4f, 0xc9, 0x04, 0xbb, 0x96, 0xaa, 0x4e, 0xe6, 0x2e, 0x74, 0x07, 0xda, 0xa3, 0x22,
	0xc0, 0x63, 0xcc, 0x71, 0xea, 0xda, 0x52, 0xa3, 0x36, 0x29, 0x1d, 0xfe, 0x0f, 0x13, 0xfe, 0x93,
	0x38, 0x8e, 0x68, 0x1a, 0x12, 0x5a, 0xa0, 0xc7, 0xd0, 0x92, 0x14, 0x48, 0x44, 0x9d, 0xc3, 0xdd,
	0x41, 0x65, 0x26, 0x64, 0x7a, 0xa4, 0xb2, 0xd0, 0x33, 0x68, 0xe6, 0x84, 0x16, 0xae, 0xd9, 0x6f,
	0x1c, 0x74, 0x0e, 0xfd, 0x9a, 0x6c, 0x7d, 0xf9, 0x20, 0x24, 0x34, 0x92, 0xf9, 0xde, 0x4f, 0x03,
	0x1a, 0x21, 0xa1, 0x7f, 0xc0, 0x9e, 0x07, 0xce, 0xd1, 0x94, 0x5f, 0x64, 0x22, 0xd4, 0x90, 0x21,
	0x27, 0xd6, 0xb6, 0xa8, 0xd2, 0x8a, 0x4a, 0xfe, 0xe6, 0x32, 0x8a, 0xe9, 0x0b, 0x09, 0x0d, 0x08,
	0xd3, 0xcc, 0x59, 0xb9, 0xb4, 0xe6, 0x5a, 0x58, 0x1b, 0xb4, 0xb0, 0xab, 0x5a, 0xac, 0xf0, 0xed,
	0x6c, 0xe1, 0xbb, 0xbd, 0xca, 0xf7, 0x67, 0x03, 0xac, 0x13, 0x7c, 0x29, 0xa0, 0xf7, 0xc0, 0x9a,
	0x16, 0x0b, 0x33, 0xaf, 0xad, 0x45, 0x30, 0xe6, 0x32, 0x98, 0xbf, 0x1d, 0xa0, 0x1a, 0x12, 0xfc,
	0x1b, 0x14, 0x21, 0xaf, 0x11, 0x81, 0xaf, 0x15, 0x21, 0xdd, 0x2a, 0x42, 0xb2, 0x55, 0x04, 0x52,
	0x2f, 0xc2, 0x17, 0x13, 0xec, 0x57, 0xd3, 0xf1, 0x78, 0x1d, 0xf6, 0x07, 0xb0, 0x23, 0xb1, 0xbf,
	0x2f, 0x30, 0xa3, 0xf1, 0xa4, 0x5c, 0x3c, 0x3b, 0xd9, 0xa2, 0x13, 0x3d, 0x84, 0xae, 0xe2, 0x61,
	0x96, 0xa6, 0x24, 0xe9, 0xc6, 0x4b, 0xde, 0x1b, 0x1c, 0xcc, 0x7d, 0x80, 0x21, 0x5b, 0xa1, 0x04,
	0x12, 0xf6, 0x9b, 0x63, 0xf9, 0xc9, 0x80, 0xee, 0x30, 0x9b, 0x4c, 0x30, 0xe5, 0x01, 0x29, 0xf2,
	0x71, 0x7c, 0x8d, 0x10, 0x34, 0x39, 0xbe, 0xe2, 0x92, 0x9a, 0x76, 0x24, 0xcf, 0xab, 0xc4, 0x9b,
	0x55, 0xe2, 0x7b, 0x60, 0x29, 0x62, 0x34, 0x21, 0x96, 0x22, 0x64, 0x4e, 0x58, 0x48, 0x68, 0xc2,
	0xa7, 0x0c, 0xeb, 0x39, 0xd5, 0x84, 0x95, 0x5e, 0xff, 0xab, 0x09, 0xdd, 0x90, 0xd0, 0x23, 0x9a,
	0xea, 0x76, 0x0a, 0xf4, 0x08, 0x1a, 0x39, 0xa1, 0x7a, 0x1f, 0xed, 0x55, 0x37, 0x8c, 0x56, 0x32,
	0x12, 0x59, 0xe8, 0x35, 0x38, 0x89, 0x2e, 0xd4, 0x3b, 0xe9, 0x49, 0xb5, 0x62, 0xf9, 0x81, 0xc1,
	0x32, 0xf0, 0x68, 0x76, 0x81, 0xf7, 0xaf, 0xb0, 0x72, 0xf8, 0xcd, 0x84, 0xff, 0x43, 0x42, 0xe5,
	0x28, 0xbd, 0x53, 0x20, 0xd0, 0xb0, 0xdc, 0x44, 0xea, 0x33, 0xe4, 0x55, 0x61, 0x96, 0x9f, 0x57,
	0xcf, 0xad, 0xc6, 0xf4, 0xc7, 0xf9, 0x25, 0x38, 0xc7, 0x98, 0xab, 0x1b, 0xf6, 0x6a, 0x96, 0xf7,
	0x28, 0xf0, 0xf6, 0x37, 0xef, 0x75, 0xf4, 0x1c, 0xda, 0xaa, 0x17, 0xf1, 0x8b, 0x72, 0xd7, 0x76,
	0x12, 0x12, 0xba, 0xa1, 0x8f, 0x21, 0x58, 0xc7, 0x98, 0x8b, 0xea, 0xdd, 0xb5, 0x72, 0x8d, 0x02,
	0xaf, 0xbf, 0x4d, 0xc7, 0x33, 0x4b, 0xfe, 0x5b, 0x79, 0xfa, 0x2b, 0x00, 0x00, 0xff, 0xff, 0x42,
	0x58, 0x73, 0xb5, 0xc7, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PinBoardServiceClient is the client API for PinBoardService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PinBoardServiceClient interface {
	CreateBoard(ctx context.Context, in *NewBoard, opts ...grpc.CallOption) (*LastID, error)
	GetBoard(ctx context.Context, in *BoardID, opts ...grpc.CallOption) (*BoardAndPins, error)
	CreatePin(ctx context.Context, in *NewPin, opts ...grpc.CallOption) (*LastID, error)
	GetPin(ctx context.Context, in *PinID, opts ...grpc.CallOption) (*PinAndComments, error)
}

type pinBoardServiceClient struct {
	cc *grpc.ClientConn
}

func NewPinBoardServiceClient(cc *grpc.ClientConn) PinBoardServiceClient {
	return &pinBoardServiceClient{cc}
}

func (c *pinBoardServiceClient) CreateBoard(ctx context.Context, in *NewBoard, opts ...grpc.CallOption) (*LastID, error) {
	out := new(LastID)
	err := c.cc.Invoke(ctx, "/pinboard_service.PinBoardService/CreateBoard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pinBoardServiceClient) GetBoard(ctx context.Context, in *BoardID, opts ...grpc.CallOption) (*BoardAndPins, error) {
	out := new(BoardAndPins)
	err := c.cc.Invoke(ctx, "/pinboard_service.PinBoardService/GetBoard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pinBoardServiceClient) CreatePin(ctx context.Context, in *NewPin, opts ...grpc.CallOption) (*LastID, error) {
	out := new(LastID)
	err := c.cc.Invoke(ctx, "/pinboard_service.PinBoardService/CreatePin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pinBoardServiceClient) GetPin(ctx context.Context, in *PinID, opts ...grpc.CallOption) (*PinAndComments, error) {
	out := new(PinAndComments)
	err := c.cc.Invoke(ctx, "/pinboard_service.PinBoardService/GetPin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PinBoardServiceServer is the server API for PinBoardService service.
type PinBoardServiceServer interface {
	CreateBoard(context.Context, *NewBoard) (*LastID, error)
	GetBoard(context.Context, *BoardID) (*BoardAndPins, error)
	CreatePin(context.Context, *NewPin) (*LastID, error)
	GetPin(context.Context, *PinID) (*PinAndComments, error)
}

// UnimplementedPinBoardServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPinBoardServiceServer struct {
}

func (*UnimplementedPinBoardServiceServer) CreateBoard(ctx context.Context, req *NewBoard) (*LastID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBoard not implemented")
}
func (*UnimplementedPinBoardServiceServer) GetBoard(ctx context.Context, req *BoardID) (*BoardAndPins, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBoard not implemented")
}
func (*UnimplementedPinBoardServiceServer) CreatePin(ctx context.Context, req *NewPin) (*LastID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePin not implemented")
}
func (*UnimplementedPinBoardServiceServer) GetPin(ctx context.Context, req *PinID) (*PinAndComments, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPin not implemented")
}

func RegisterPinBoardServiceServer(s *grpc.Server, srv PinBoardServiceServer) {
	s.RegisterService(&_PinBoardService_serviceDesc, srv)
}

func _PinBoardService_CreateBoard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewBoard)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PinBoardServiceServer).CreateBoard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pinboard_service.PinBoardService/CreateBoard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PinBoardServiceServer).CreateBoard(ctx, req.(*NewBoard))
	}
	return interceptor(ctx, in, info, handler)
}

func _PinBoardService_GetBoard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BoardID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PinBoardServiceServer).GetBoard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pinboard_service.PinBoardService/GetBoard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PinBoardServiceServer).GetBoard(ctx, req.(*BoardID))
	}
	return interceptor(ctx, in, info, handler)
}

func _PinBoardService_CreatePin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewPin)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PinBoardServiceServer).CreatePin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pinboard_service.PinBoardService/CreatePin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PinBoardServiceServer).CreatePin(ctx, req.(*NewPin))
	}
	return interceptor(ctx, in, info, handler)
}

func _PinBoardService_GetPin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PinID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PinBoardServiceServer).GetPin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pinboard_service.PinBoardService/GetPin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PinBoardServiceServer).GetPin(ctx, req.(*PinID))
	}
	return interceptor(ctx, in, info, handler)
}

var _PinBoardService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pinboard_service.PinBoardService",
	HandlerType: (*PinBoardServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateBoard",
			Handler:    _PinBoardService_CreateBoard_Handler,
		},
		{
			MethodName: "GetBoard",
			Handler:    _PinBoardService_GetBoard_Handler,
		},
		{
			MethodName: "CreatePin",
			Handler:    _PinBoardService_CreatePin_Handler,
		},
		{
			MethodName: "GetPin",
			Handler:    _PinBoardService_GetPin_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pinboard_service.proto",
}
